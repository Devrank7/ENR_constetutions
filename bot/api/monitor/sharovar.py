from abc import ABC, abstractmethod

from bot.api.ai.ai import ChatGPT, generate
from bot.api.monitor.reshoot import reshoot


class RulesOfENR(ABC):

    def __init__(self, text: str):
        self.text = text

    async def check(self) -> tuple[bool, str, int]:
        response = await generate(ChatGPT(prompt=self._question()))
        print(response)
        return response[-1] == '!', f"{self.name()}.{response}", self.cost_fine()

    @abstractmethod
    def cost_fine(self) -> int:
        raise NotImplementedError

    @abstractmethod
    def _question(self) -> str:
        raise NotImplementedError

    @abstractmethod
    def name(self):
        raise NotImplementedError


class Sharovarshina(RulesOfENR):
    def _question(self) -> str:
        return f"""--START_TEXT--{self.text}--END_TEXT--
        –ì–æ–≤–æ—Ä–∏—Ç—Å—è –ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ —è—Å–Ω–æ –∏ –æ—Ç–∫—Ä—ã—Ç–æ, —á—Ç–æ –∫—Ç–æ-—Ç–æ —á—Ç–æ-—Ç–æ –∑–∞–±—ã–ª –∏–ª–∏ –∑–∞–±—ã–ª –∫ —á–µ–º—É-—Ç–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è?
        –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —è–≤–ª—è–µ—Å—Ç—Å—è –î–∞ —Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª —Ç–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å '!' –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ —Ç–∞–∫–æ–π —Å–∏–º–≤–æ–ª '#'
        """

    def cost_fine(self) -> int:
        return 2

    def name(self):
        return "–°—Ç–∞—Ç—å—è 2. –Ø–≤–Ω—ã–π –ø—Ä–∏–∑–Ω–∞–∫ —à–∞—Ä–æ–≤–∞—Ä—â–∏–Ω—ãüëÅÔ∏è —ç—Ç–æ –∂–µ –Ω–µ–ø—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–∏–∑–º –∏ –Ω–µ–ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ—Å—Ç—å."


class FreeWordsOfENR(RulesOfENR):
    def _question(self) -> str:
        return f"""--START_TEXT--{self.text}--END_TEXT--
        –°–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç –∂–µ—Å—Ç–æ–∫–æ–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –º–Ω–µ–Ω–∏—è?
        –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —è–≤–ª—è–µ—Å—Ç—Å—è –î–∞ —Ç–æ —Å–∞–º—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª —Ç–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å '!' –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ —Ç–∞–∫–æ–π —Å–∏–º–≤–æ–ª '#'
        """

    def cost_fine(self) -> int:
        return 3

    def name(self):
        return "–°—Ç–∞—Ç—å—è 3. –ù–∞—Ä—É—à–µ–Ω–∏–µ —Å–≤–æ–±–æ–¥—ã —Å–ª–æ–≤–∞!!! –ù–µ—É–≤–∞–∂–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ—á–∏—Å–∫–æ–≥–æ –º–Ω–µ–Ω–∏—èüò°"


class ReshootsOfENR(RulesOfENR):

    def __init__(self, text: str, two_steps: bool = False):
        super().__init__(text)
        self.two_steps = two_steps

    async def check(self) -> tuple[bool, str, int]:
        return await reshoot(self.text, self.two_steps, self._question()), self.name(), self.cost_fine()

    def cost_fine(self) -> int:
        return 5

    def _question(self) -> str:
        return "–í —ç—Ç–æ–º —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å —Å–ª–æ–≤–æ–∞ '–ø–µ—Ä–µ—Å–Ω—è—Ç—å, –ø–µ—Ä–µ—Å—ä–æ–º–∫–∞' –∏ –ø–æ–¥–æ–±–Ω—ã–µ —Å–ª–æ–≤–∞ –æ–± —Å—ä–µ–º–∫–∞—Ö —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '–ø–µ—Ä–µ'"

    def name(self):
        return "–°–¢–ê–¢–¨–Ø 1. –Ø–≤–Ω–æ –≤–∏–¥–Ω–æ –Ω–∞–º–µ–∫ –Ω–∞ –ü–ï–†–ï–°–™–û–ú–ö–òüì∏."
