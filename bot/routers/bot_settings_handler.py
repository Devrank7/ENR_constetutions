from aiogram import Router, F
from aiogram.enums import ChatMemberStatus
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, ReplyKeyboardMarkup, \
    KeyboardButton, ReplyKeyboardRemove

from bot.api.permision import my_permission_has
from db.mongo.bot_settings import update_bot_settings, GetBotConstActivity, UpdateBotChatsDistributes, \
    RemoveBotChatsDistributes, GetBotLock, UpdateBotLock, UpdateBotConstActivity

router = Router()


@router.message(Command("set"))
async def reshoot_handler(message: Message):
    action = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="Yes", callback_data="a_y"),
         InlineKeyboardButton(text="No", callback_data="a_n")],
    ])
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏–ª–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏: ", reply_markup=action)


@router.callback_query(F.data.startswith("a_"))
async def reshoot_handler(query: CallbackQuery):
    active = query.data.split("_")[1] == 'y'
    if active:
        has = await my_permission_has(query.message, [ChatMemberStatus.ADMINISTRATOR, ChatMemberStatus.CREATOR])
        if not has:
            await query.message.edit_text("–ü—Ä–æ—Å—Ç–∏—Ç–µ –Ω–æ –¥–∞–∞–π—Ç–µ –º–Ω–µ –∞–¥–º–∏–Ω–∫—É –ø–µ—Ä–µ–¥ –≤–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏!!!")
            return
    update_bot_settings(UpdateBotConstActivity(active))
    status = {"–í–∫–ª—é—á–µ–Ω—ã–π" if active else "–í—ã–∫–ª—é—á–µ–Ω—ã–π"}
    await query.answer(f"–°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {status}", show_alert=True)
    await query.message.edit_text(f"–°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {status}")


@router.message(Command("get"))
async def reshoot_handler(message: Message):
    activity = update_bot_settings(GetBotConstActivity())
    await message.answer(f"–°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ {activity}")


@router.message(Command("distribute"))
async def distribute(message: Message):
    distribute_action = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="Yes", callback_data="d_yes"),
         InlineKeyboardButton(text="No", callback_data="d_no")],
    ])
    await message.answer("–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ —Å–Ω—è—Ç–∏–µ —à—Ç—Ä–∞—Ñ–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –≤—ã—Ö–æ–¥–Ω—ã—Ö, –∫–∞–Ω–∏–∫—É–ª–∞—Öü§ó.",
                         reply_markup=distribute_action)


@router.callback_query(F.data.startswith("d_"))
async def d_callback(query: CallbackQuery):
    status = query.data.split("_")[1].lower() == "yes"
    await query.answer()
    if status:
        update_bot_settings(UpdateBotChatsDistributes(chat_id=query.message.chat.id))
        await query.message.edit_text("–í–∞—à —á–∞—Ç –¥–æ–±–∞–≤–∏–ª—Å—è –≤ —É–≤–µ–¥–æ–º–ª—è—Ç–æ—Ä—ã")
    else:
        update_bot_settings(RemoveBotChatsDistributes(chat_id=query.message.chat.id))
        await query.message.edit_text("–í–∞—à —á–∞—Ç —É–¥–∞–ª–∏–ª—Å—è –∏–∑ —É–≤–µ–¥–æ–º–ª—è—Ç–æ—Ä–∞—Ö")


@router.message(Command("get_lock"))
async def get_lock(message: Message):
    lock = update_bot_settings(GetBotLock())
    has = await my_permission_has(message, [ChatMemberStatus.ADMINISTRATOR, ChatMemberStatus.CREATOR])
    warn = '' if has else ' –¢–æ–ª—å–∫–æ –¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∫—É'
    text = f"–Ø –Ω–µ –±—É–¥—É –±–∞–Ω–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä—É–≥–∞—Ç—åü§¨ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ä—É—à–∏–ª –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏—é –ï–ù–† {warn}" if lock else \
        f"–Ø –±—É–¥—É –±–∞–Ω–Ω–∏—Ç—å –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è. –ò –±—É–¥—É –±–∞–Ω–Ω–∏—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏üì£ {warn}"
    await message.answer(text)


@router.message(Command("set_lock"))
async def set_lock(message: Message):
    reply_button = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ç–∞–∫ —á—Ç–æ–±—ã —è –º–æ–≥ –±–∞–Ω–Ω–∏—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏")],
        [KeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ç–∞–∫ —á—Ç–æ–±—ã —è –Ω–µ –º–æ–≥ –±–∞–Ω–Ω–∏—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏, –∞ –ø—Ä–æ—Å—Ç–æ —Ä—É–≥–∞–ª")]
    ], resize_keyboard=True, one_time_keyboard=True)
    await message.answer("–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚òëÔ∏è", reply_markup=reply_button)


@router.message(F.text == "–°–¥–µ–ª–∞—Ç—å —Ç–∞–∫ —á—Ç–æ–±—ã —è –º–æ–≥ –±–∞–Ω–Ω–∏—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏")
async def set_lo(message: Message):
    has = await my_permission_has(message, [ChatMemberStatus.ADMINISTRATOR, ChatMemberStatus.CREATOR])
    update_bot_settings(UpdateBotLock(status=False))
    warn = '' if has else ' –¢–æ–ª—å–∫–æ –¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∫—É!!!'
    await message.answer(f'–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –±–∞–Ω–Ω–∏—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ü§† {warn}', reply_markup=ReplyKeyboardRemove())


@router.message(F.text == "–°–¥–µ–ª–∞—Ç—å —Ç–∞–∫ —á—Ç–æ–±—ã —è –Ω–µ –º–æ–≥ –±–∞–Ω–Ω–∏—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏, –∞ –ø—Ä–æ—Å—Ç–æ —Ä—É–≥–∞–ª")
async def set_loc(message: Message):
    update_bot_settings(UpdateBotLock(status=True))
    has = await my_permission_has(message, [ChatMemberStatus.ADMINISTRATOR, ChatMemberStatus.CREATOR])
    warn = '' if has else ' –¢–æ–ª—å–∫–æ –¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∫—É!!!'
    await message.answer(f'–¢–µ–ø–µ—Ä—å —è –Ω–µ –º–æ–≥—É –±–∞–Ω–Ω–∏—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏–∫–æ–≤–∞—Ç—åüòï {warn}',
                         reply_markup=ReplyKeyboardRemove())
